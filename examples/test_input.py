#!/usr/bin/env python3

import numpy as np

test_input = {
    "ini_nodes" : 
    np.array([0, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2,
           1, 0, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 1, 1, 0, 0, 1,
              2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 1, 2, 1, 1, 1]),
    "ini_symbols" : 
    np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
    "ini_clauses" : 
    np.array([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
    "node_inputs_1/lens" : 
    np.array([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,
              1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,
              0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]),
    "node_inputs_1/symbols" : 
    np.array([ 0,  1,  8,  2,  9, 10, 11, 12, 12,  3, 13, 12,  3, 14, 12,  3,  4,
               9, 12,  3, 15, 12,  3, 16, 12, 11,  8,  3,  5,  9,  8,  8, 17, 17,
               10,  8,  7,  6,  9, 11,  8,  9]),
    "node_inputs_1/nodes" : 
    np.array([[-1, -1],
              [-1, -1],
              [ 0,  1],
              [-1, -1],
              [ 3,  0],
              [ 1, -1],
              [ 6, -1],
              [ 8,  6],
              [10, 11],
              [11, -1],
              [13, -1],
              [15, 16],
              [16, -1],
              [18, -1],
              [20, 21],
              [21, -1],
              [23, -1],
              [24,  1],
              [26, 27],
              [27, -1],
              [29, -1],
              [31, 32],
              [32, -1],
              [34, -1],
              [36, 37],
              [36, -1],
              [36,  1],
              [37, -1],
              [41, 36],
              [42, 37],
              [44, 45],
              [45, 44],
              [ 0,  1],
              [49, 50],
              [50, -1],
              [49, 50],
              [-1, -1],
              [54, -1],
              [ 1, 55],
              [57, -1],
              [57,  1],
              [57, 54]]),
    "node_inputs_1/sgn" : 
    np.array([ 1,  1, -1,  1,  1, -1, -1,  1, -1,  1,  1, -1,  1,  1, -1,  1,  1,
               1, -1,  1,  1, -1,  1,  1, -1, -1, -1,  1,  1,  1, -1, -1,  1, -1,
               1,  1,  1,  1,  1, -1, -1,  1]),
    "node_inputs_2/lens" : 
    np.array([2, 2, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,
              0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 0, 0, 0, 1, 1, 0,
              1, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0]),
    "node_inputs_2/symbols" : 
    np.array([ 8, 17, 10,  9,  9, 11, 12, 12,  3, 13, 12,  3, 14, 12,  3,  4,  9,
               12,  3, 15, 12,  3, 16, 12, 11,  8,  3,  5,  9,  8,  8, 17,  8, 10,
               6, 11,  8,  9]),
    "node_inputs_2/nodes" : 
    np.array([[ 2,  1],
              [48,  1],
              [ 5, -1],
              [56, 55],
              [ 4,  0],
              [ 7, -1],
              [ 9,  6],
              [12, 11],
              [13, -1],
              [14, -1],
              [17, 16],
              [18, -1],
              [19, -1],
              [22, 21],
              [23, -1],
              [24, -1],
              [25,  1],
              [28, 27],
              [29, -1],
              [30, -1],
              [33, 32],
              [34, -1],
              [35, -1],
              [38, 37],
              [39, -1],
              [40,  1],
              [41, -1],
              [42, 36],
              [43, 37],
              [46, 45],
              [47, 44],
              [51, 50],
              [53, 50],
              [52, -1],
              [55, -1],
              [58, -1],
              [59,  1],
              [60, 54]]),
    "node_inputs_2/sgn" : 
    np.array([-1,  1, -1,  1,  1, -1,  1, -1,  1,  1, -1,  1,  1, -1,  1,  1,  1,
              -1,  1,  1, -1,  1,  1, -1, -1, -1,  1,  1,  1, -1, -1, -1,  1,  1,
              1, -1, -1,  1]),
    "node_inputs_3/lens" : 
    np.array([1, 5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
              0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0,
              1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]),
    "node_inputs_3/symbols" : 
    np.array([ 9,  8,  8,  8,  9, 17, 12, 12, 12, 12, 12, 12,  5, 12,  9,  8,  8,
               17,  8,  9,  9]),
    "node_inputs_3/nodes" : 
    np.array([[ 4,  3],
              [ 2,  0],
              [40, 36],
              [59, 57],
              [25, 24],
              [48,  0],
              [ 9,  8],
              [12, 10],
              [17, 15],
              [22, 20],
              [28, 26],
              [33, 31],
              [42, 41],
              [38, 36],
              [43, 42],
              [47, 45],
              [46, 44],
              [51, 49],
              [53, 49],
              [60, 57],
              [56,  1]]),
    "node_inputs_3/sgn" : 
    np.array([ 1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1,  1, -1,  1, -1, -1,
               -1,  1,  1,  1]),
    "symbol_inputs/lens" : 
    np.array([1, 1, 1, 6, 1, 1, 1, 1, 6, 5, 2, 3, 7, 1, 1, 1, 1, 2]),
    "symbol_inputs/nodes" : 
    np.array([[ 0, -1, -1],
              [ 1, -1, -1],
              [ 3, -1, -1],
              [13, 11, -1],
              [18, 16, -1],
              [23, 21, -1],
              [29, 27, -1],
              [34, 32, -1],
              [41, 37, -1],
              [24, 23, -1],
              [42, 41, 36],
              [55, 54, -1],
              [54, -1, -1],
              [ 2,  0,  1],
              [40, 36,  1],
              [46, 44, 45],
              [47, 45, 44],
              [59, 57,  1],
              [53, 49, 50],
              [56,  1, 55],
              [ 4,  3,  0],
              [25, 24,  1],
              [43, 42, 37],
              [60, 57, 54],
              [ 5,  1, -1],
              [52, 50, -1],
              [ 7,  6, -1],
              [39, 36, -1],
              [58, 57, -1],
              [12, 10, 11],
              [17, 15, 16],
              [22, 20, 21],
              [28, 26, 27],
              [33, 31, 32],
              [38, 36, 37],
              [ 9,  8,  6],
              [14, 13, -1],
              [19, 18, -1],
              [30, 29, -1],
              [35, 34, -1],
              [51, 49, 50],
              [48,  0,  1]]),
    "symbol_inputs/sgn" : 
    np.array([ 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1,
               -1,  1,  1,  1,  1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
               -1,  1,  1,  1,  1,  1, -1,  1]),
    "node_c_inputs/lens" : 
    np.array([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0,
              1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1,
              0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1]),
    "node_c_inputs/data" : 
    np.array([ 0,  1,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9,  9,
               9,  9, 10, 10, 11, 12, 12, 12, 13, 14, 14, 14]),
    "clause_inputs/lens" : 
    np.array([1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 2, 1, 3, 1, 3]),
    "clause_inputs/data" : 
    np.array([ 2,  4,  5,  7,  9, 12, 14, 17, 19, 22, 25, 28, 30, 33, 35, 38, 39,
               40, 43, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60]),
    "prob_segments/lens" : 
    np.array([9]),
    "prob_segments/data" : 
    np.array([1, 1, 1, 7, 1, 1, 1, 1, 1]),
    "labels" : 
    np.array([1, 1, 0, 0, 1, 1, 0, 0]),
}

names = open("data_spec_to_tf_names.txt").read().strip().split("\n")
names = [x.split(" = ") for x in names]
names = {x:y.rstrip(":0") for (x,y) in names}

cnt = 0
for x in test_input:
   if len(test_input[x].shape) != 1:
      continue
   cname = x.replace("/","_")
   print('load_vector(%d, graph, inputs, input_values, %d, data_%s, "%s");' % (cnt, test_input[x].shape[0], cname, names[x]))
   cnt += 1

for x in test_input:
   if len(test_input[x].shape) != 2:
      continue
   cname = x.replace("/","_")
   print('load_matrix(%d, graph, inputs, input_values, %d, %d, data_%s, "%s");' % (cnt, test_input[x].shape[0], test_input[x].shape[1], cname, names[x]))
   cnt += 1

for x in test_input:
   cname = x.replace("/","_")
   size = test_input[x].size
   test_input[x] = test_input[x].reshape((size,))
   print("static int32_t data_%s[%s] = {%s};" % (cname, size, ",".join(map(str,test_input[x]))))

